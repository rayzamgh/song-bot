name: Publish Docker Image to GCR

on:
  push:
    branches: [ main ] # Adjust this to your needs

env:
  IMAGE_NAME: song-bot
  GCR_HOST: gcr.io/portfolio-web-249407

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCR_KEY }}
        project_id: portfolio-web-249407

    - name: Write Google Application Credentials to File
      run: |
        mkdir -p credentials
        echo "${{ secrets.APP_GCP_CREDENTIALS }}" > credentials/portfolio-web-249407-067e257bc8c9.json
      
    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud --quiet auth configure-docker

    - name: Build and Push Docker image
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        CHATGPT_KEY: ${{ secrets.CHATGPT_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        docker build -t $IMAGE_NAME .
        docker tag $IMAGE_NAME $GCR_HOST/$IMAGE_NAME-latest
        docker push $GCR_HOST/$IMAGE_NAME-latest
